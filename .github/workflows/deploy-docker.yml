name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  build-and-deploy:
    needs: sonar-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t balap340/hello-world:latest .

      - name: Push Docker Image
        run: docker push balap340/hello-world:latest

      - name: Setup Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Apply Kubernetes Deployment
        run: kubectl apply -f k8s/hello-world-deployment.yaml









#name: Deploy Docker Hello World with SonarQube

#on:
 # push:
  #  branches:
   #   - main  # Runs on every push to main branch

#jobs:
 # build-and-scan:
  #  runs-on: ubuntu-latest

   # steps:
    #  - name: Checkout Repository
     #   uses: actions/checkout@v4

      #- name: SonarQube Scan
       # uses: sonarsource/sonarqube-scan-action@master
        #env:
         # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #SONAR_HOST_URL: https://sonarcloud.io

      #- name: Login to DockerHub
       # uses: docker/login-action@v3
        #with:
         # username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Build Docker Image
       # run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-world:latest .

      #- name: Push Docker Image to DockerHub
       # run: docker push ${{ secrets.DOCKER_USERNAME }}/hello-world:latest

  #deploy:
   # runs-on: ubuntu-latest
    #needs: build-and-scan

    ##steps:
      ##- name: Pull & Run Docker Container
       ## run: |
        # # docker pull ${{ secrets.DOCKER_USERNAME }}/hello-world:latest
         ## docker run --rm ${{ secrets.DOCKER_USERNAME }}/hello-world:latest

    #steps:
     # - name: Pull & Run Docker Container with Exposed Port
      #  run: |
       #   docker pull ${{ secrets.DOCKER_USERNAME }}/hello-world:latest
        #  docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/hello-world:latest
         # sleep 5  # Wait for the server to start

      #- name: Test the Running Container
       # run: curl http://localhost:8080 || echo "Server did not start"

       